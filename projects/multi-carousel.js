let currentIdx=[0,0,0,0,0,0,0,0];const images1={list:createImagesList(1,8,400,300,["png","png","png","png","png","png","png","png"],["The Implemented Architecture","The sandbox environment in action","Malware Profile","Imports - Static vs Dynamic","Commands extracted from the binary","Dynamic Properties","Behaviors from dynamic analysis","Sequence of System Calls from Tracing"])};const thumbnails1={list:createImagesList(1,8,50,50,["png","png","png","png","png","png","png","png"],[0,0,0,0,0,0,0,0])};const images2={list:createImagesList(2,5,400,300,["png","png","gif","gif","png"],["Reconstruction - Normal vs Anomalous","A CA pattern example - malicious vs benign","2D programmable CA evolution examples","The motion in the evolution of CA patterns over a sliding window","Generative NN architectures for Anomaly detection"])};const thumbnails2={list:createImagesList(2,5,50,50,["png","png","gif","gif","png"],[0,0,0,0,0])};const images3={list:createImagesList(3,6,400,300,["png","png","png","png","png","png"],["collecting api call traces","The selected abstractions are architecture-independent","The preprocessing step","slides","slides","slides"])};const thumbnails3={list:createImagesList(3,6,50,50,["png","png","png","png","png","png"],[0,0,0,0,0,0])};const images4={list:createImagesList(4,13,400,300,["png","gif","png","png","png","png","png","png","png","png","png","png","png"],["The architecture","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","3d-force graph of relationships between processes and files","Events Collected","Basic Static Analysis","Searchable Process Relation Visualization"])};const thumbnails4={list:createImagesList(4,13,50,50,["png","gif","png","png","png","png","png","png","png","png","png","png","png"],[0,0,0,0,0,0,0,0,0,0,0,0,0])};const images5={list:createImagesList(5,8,400,300,["png","png","png","png","png","png","png","png"],["mapping data","distribution of fossils corresponds to the Western Interior Seaway","Configure Clustering Algorithms","Some sample data","Some clustering examples","Some clustering examples","In with higher dimensional input the clusters appear as overlapping polygons","This is because the 2-d fails to capture the 3-d space/topography For example: for this canyon/ravine"])};const thumbnails5={list:createImagesList(5,8,50,50,["png","png","png","png","png","png","png","png"],[0,0,0,0,0,0,0,0])};const images6={list:createImagesList(6,6,400,300,["png","png","png","png","png","png"],["dashboard","application profile","testing profiles","manual test execution","test logs","test execution records"])};const thumbnails6={list:createImagesList(6,6,50,50,["png","png","png","png","png","png"],[0,0,0,0,0,0])};const images7={list:createImagesList(7,4,400,300,["png","png","png","png"],["Interface that allows users to explore the results of the algorithm, plots the graphs with the outliers for time period and station","Displaying the stations on a map, with the electromagnetic data scaled to its magnitude","Displaying the data, on a grid, and applying different outlier detection algorithms, and different algorithms to interpolate missing data","Graph data, and shows a table of outliers for each time period"])};const thumbnails7={list:createImagesList(7,4,50,50,["png","png","png","png"],[0,0,0,0])};const images8={list:createImagesList(8,6,400,300,["png","png","png","png","png","png"],["AVectors - Creating a map of attack vectors, and making notes while doing a box. Exports to html, or pdf","RBNN, MAENN for Movie Recommendation - Neural Networks for Movie Recommendations, with tensorflow v1","mincrypto - Tool that allows the user to apply a series of consecutive encode and decode operations.","Basic Image Classification","Classifying browsing history - Clustering and Categorizing Browsing History","Pet Adoption App - An Animal shelter desktop app. Matching pets to owners with compatibility algorithm."])};const thumbnails8={list:createImagesList(8,6,50,50,["png","png","png","png","png","png"],[0,0,0,0,0,0])};images=[images1,images2,images3,images4,images5,images6,images7,images8];thumbnails=[thumbnails1,thumbnails2,thumbnails3,thumbnails4,thumbnails5,thumbnails6,thumbnails7,thumbnails8];const[carouselSlidesUl1,carouselThumbnailsUl1]=createCarouselContent(0,images1,thumbnails1);const[carouselSlidesUl2,carouselThumbnailsUl2]=createCarouselContent(1,images2,thumbnails2);const[carouselSlidesUl3,carouselThumbnailsUl3]=createCarouselContent(2,images3,thumbnails3);const[carouselSlidesUl4,carouselThumbnailsUl4]=createCarouselContent(3,images4,thumbnails4);const[carouselSlidesUl5,carouselThumbnailsUl5]=createCarouselContent(4,images5,thumbnails5);const[carouselSlidesUl6,carouselThumbnailsUl6]=createCarouselContent(5,images6,thumbnails6);const[carouselSlidesUl7,carouselThumbnailsUl7]=createCarouselContent(6,images7,thumbnails7);const[carouselSlidesUl8,carouselThumbnailsUl8]=createCarouselContent(7,images8,thumbnails8);const carouselSlides1=carouselSlidesUl1.children;const carouselThumbnails1=carouselThumbnailsUl1.children;const carouselSlides2=carouselSlidesUl2.children;const carouselThumbnails2=carouselThumbnailsUl2.children;const carouselSlides3=carouselSlidesUl3.children;const carouselThumbnails3=carouselThumbnailsUl3.children;const carouselSlides4=carouselSlidesUl4.children;const carouselThumbnails4=carouselThumbnailsUl4.children;const carouselSlides5=carouselSlidesUl5.children;const carouselThumbnails5=carouselThumbnailsUl5.children;const carouselSlides6=carouselSlidesUl6.children;const carouselThumbnails6=carouselThumbnailsUl6.children;const carouselSlides7=carouselSlidesUl7.children;const carouselThumbnails7=carouselThumbnailsUl7.children;const carouselSlides8=carouselSlidesUl8.children;const carouselThumbnails8=carouselThumbnailsUl8.children;carouselSlides=[carouselSlides1,carouselSlides2,carouselSlides3,carouselSlides4,carouselSlides5,carouselSlides6,carouselSlides7,carouselSlides8];carouselThumbnails=[carouselThumbnails1,carouselThumbnails2,carouselThumbnails3,carouselThumbnails4,carouselThumbnails5,carouselThumbnails6,carouselThumbnails7,carouselThumbnails8];setupCarousel();function setupCarousel(){carousels=document.getElementsByClassName("carousel");for(let i=0;i<carousels.length;i++){addEvents(carousels[i],i)}}
function addEvents(obj,idx){const prevButton=obj.querySelector("#prevButton");const nextButton=obj.querySelector("#nextButton");const carouselThumbnailsUl=obj.querySelector(".carousel__slides--thumbnails");nextButton.addEventListener("click",function(){handleNext(idx)});prevButton.addEventListener("click",function(){handlePrev(idx)});carouselThumbnailsUl.addEventListener("click",e=>{handleSelectedThumbnail(e,idx)});carouselThumbnailsUl.addEventListener("mouseover",e=>{handleHoverImagePreload(e,idx)});function handleNext(idx){if(currentIdx[idx]<carouselSlides[idx].length-1){changeCurrentSlide(idx,currentIdx[idx],currentIdx[idx]+1);currentIdx[idx]+=1}else{changeCurrentSlide(idx,currentIdx[idx],0);currentIdx[idx]=0}}
function handlePrev(idx){if(currentIdx[idx]>0){changeCurrentSlide(idx,currentIdx[idx],currentIdx[idx]-1);currentIdx[idx]-=1}else{changeCurrentSlide(idx,currentIdx[idx],carouselSlides[idx].length-1);currentIdx=carouselSlides[idx].length-1}}
function handleSelectedThumbnail(e,idx){const newIdx=Array.from(carouselSlides[idx]).findIndex((child)=>child.firstElementChild.dataset.imgid===e.target.dataset.imgid);if(newIdx>-1&&newIdx!==currentIdx[idx]){loadPrevAndNextImages(idx,newIdx-1,newIdx+1);changeCurrentSlide(idx,currentIdx[idx],newIdx);currentIdx[idx]=newIdx}}
function handleHoverImagePreload(e,idx){const newIdx=Array.from(carouselSlides[idx]).findIndex((child)=>child.firstElementChild.dataset.imgid===e.target.dataset.imgid);if(newIdx>-1&&newIdx!==currentIdx[idx]){loadImage(carouselSlides[idx][newIdx].firstElementChild);loadPrevAndNextImages(idx,newIdx-1,newIdx+1)}}}
function createImagesList(collID,length,width,height,extensions,captions){return Array.from(Array(length)).map((elem,idx)=>({id:idx,url:`projects/${collID}/${idx+1}.${extensions[idx]}`,alt:"Alt text",caption:captions[idx],width,height}))}
function createCarouselContent(idx,slides,thumbnails){const slidesUl=document.getElementsByClassName("carousel__slides")[2*idx];const thumbnailsUl=document.getElementsByClassName("carousel__slides--thumbnails")[idx];const slidesFragment=document.createDocumentFragment();const thumbnailsFragment=document.createDocumentFragment();for(let i=0;i<slides.list.length;i++){slidesFragment.appendChild(createSlideLiElem(slides.list[i],"main"));thumbnailsFragment.appendChild(createSlideLiElem(thumbnails.list[i],"thumbnail"))}
slidesUl.appendChild(slidesFragment);thumbnailsUl.appendChild(thumbnailsFragment);return[slidesUl,thumbnailsUl];function createSlideLiElem(imgObj,type){const li=document.createElement("li");const img=document.createElement("img");const classesLi=["carousel__slide",`carousel__slide--${type}`];const classesImg="carousel__img";const shouldLoadFirst=type=="thumbnail"||(type=="main"&&(imgObj.id<2||imgObj.id>slides.list.length-2));li.classList.add(...classesLi);img.classList.add(classesImg);if(imgObj.id===0){li.classList.add("carousel__slide--visible")}
img.dataset.imgid=imgObj.id;img.dataset.src=!shouldLoadFirst?imgObj.url:"";img.alt=imgObj.alt;img.src=shouldLoadFirst?imgObj.url:`https://via.placeholder.com/${imgObj.width}x${imgObj.height}/FFFFFF/FFFFFF`;img.width=imgObj.width;img.height=imgObj.height;li.appendChild(img);if(type!="thumbnail"){const captionDiv=document.createElement("div");captionDiv.className="carousel-caption d-none d-md-block car-cap darker w-100 mx-0 py-0";const para=document.createElement("p");const node=document.createTextNode(imgObj.caption);para.className="mx-0 my-0 px-0";para.appendChild(node);captionDiv.append(para);li.appendChild(captionDiv)}
return li}}
function changeCurrentSlide(idx,oldIdx,newIdx){loadImage(carouselSlides[idx][newIdx]?.firstElementChild);if(newIdx<carouselSlides[idx].length-1&&oldIdx<newIdx){loadImage(carouselSlides[idx][newIdx+1]?.firstElementChild)}else{loadImage(carouselSlides[idx][newIdx-1]?.firstElementChild)}
carouselSlides[idx][newIdx].classList.add("carousel__slide--visible");carouselThumbnails[idx][newIdx].classList.add("carousel__slide--visible");carouselSlides[idx][oldIdx].classList.remove("carousel__slide--visible");carouselThumbnails[idx][oldIdx].classList.remove("carousel__slide--visible")}
function loadPrevAndNextImages(idx,prevIdx,nextIdx){loadImage(carouselSlides[idx][prevIdx]?.firstElementChild);loadImage(carouselSlides[idx][nextIdx]?.firstElementChild)}
function loadImage(img){if(img&&(!img.src||img.src.includes("placeholder"))){img.src=img.dataset.src}}